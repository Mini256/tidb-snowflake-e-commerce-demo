<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pingcap.shop.dao.snowflake.SnowflakeHotItemMapper">
  <resultMap id="HotItem" type="com.pingcap.shop.model.HotItem">
    <result property="itemId" column="ITEM_ID" javaType="java.lang.Long" jdbcType="BIGINT" />
    <result property="itemName" column="ITEM_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
    <result property="itemPrice" column="ITEM_PRICE" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    <result property="itemType" column="ITEM_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
    <result property="itemDesc" column="ITEM_DESC" javaType="java.lang.String" jdbcType="VARCHAR" />
    <result property="itemLabel" column="ITEM_LABEL" javaType="java.lang.String" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getHotItems" resultMap="HotItem">
    SELECT item_id, item_name, item_type, item_desc, item_price, item_label
    FROM "hot_items"
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <select id="getHighLabelItems" resultMap="HotItem">
    SELECT
      t2.id AS item_id,
      t2.item_name,
      t2.item_type,
      t2.item_desc,
      t2.item_price,
      'high' AS item_label
    FROM (
      SELECT sum(item_count) AS total_count,item_id
      FROM "orders"
      WHERE create_time > DATEADD(DAY, -7, CURRENT_DATE)
      GROUP BY item_id
    ) t1
    LEFT JOIN "items" t2 ON t1.item_id = t2.id
    LEFT JOIN (
      SELECT avg(item_price) AS avg_price FROM "items"
    ) t3 ON t2.item_price > t3.avg_price
    ORDER BY t1.total_count DESC
    LIMIT 10;
  </select>

  <select id="getLowLabelItems" resultMap="HotItem">
    SELECT
      t2.id AS item_id,
      t2.item_name,
      t2.item_type,
      t2.item_desc,
      t2.item_price,
      'low' AS item_label
    FROM
    (
      SELECT sum(item_count) as total_count, item_id
      FROM "orders"
      WHERE create_time > DATEADD(DAY, -7, CURRENT_DATE)
      GROUP BY item_id
    ) t1
    LEFT JOIN "items" t2 ON t1.item_id = t2.id
    LEFT JOIN (
      SELECT avg(item_price) AS avg_price FROM "items"
    ) t3 ON t2.item_price <![CDATA[ <= ]]> t3.avg_price
    ORDER BY t1.total_count DESC
    LIMIT 10;
  </select>

  <insert id="calcHighLabelItems">
    INSERT INTO "hot_items" (item_id, item_name, item_type, item_desc, item_price, item_label)
    SELECT
      t2.id AS item_id,
      t2.item_name,
      t2.item_type,
      t2.item_desc,
      t2.item_price,
      'high' AS item_label
    FROM (
      SELECT sum(item_count) AS total_count, item_id
      FROM "orders"
      WHERE create_time > DATEADD(DAY, -7, CURRENT_DATE)
      GROUP BY item_id
    ) t1
    LEFT JOIN "items" t2 ON t1.item_id = t2.id
    LEFT JOIN (
      SELECT avg(item_price) AS avg_price FROM "items"
    ) t3 ON 1 = 1
    WHERE t2.item_price > t3.avg_price
    ORDER BY t1.total_count DESC
    LIMIT 10;
  </insert>

  <insert id="calcLowLabelItems">
    INSERT INTO "hot_items" (item_id, item_name, item_type, item_desc, item_price, item_label)
    SELECT
      t2.id AS item_id,
      t2.item_name,
      t2.item_type,
      t2.item_desc,
      t2.item_price,
      'low' AS item_label
    FROM (
      SELECT sum(item_count) as total_count, item_id
      FROM "orders"
      WHERE create_time > DATEADD(DAY, -7, CURRENT_DATE)
      GROUP BY item_id
    ) t1
    LEFT JOIN "items" t2 ON t1.item_id = t2.id
    LEFT JOIN (
      SELECT avg(item_price) AS avg_price FROM "items"
    ) t3 ON 1 = 1
    WHERE t2.item_price <![CDATA[ <= ]]> t3.avg_price
    ORDER BY t1.total_count DESC
    LIMIT 10;
  </insert>

  <delete id="deleteHighLabelItems">
    DELETE FROM "hot_items" WHERE item_label = 'high';
  </delete>

  <delete id="deleteLowLabelItems">
    DELETE FROM "hot_items" WHERE item_label = 'low';
  </delete>
</mapper>